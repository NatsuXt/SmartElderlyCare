CREATE TABLE ElderlyInfo (
    elderly_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    gender VARCHAR2(10),
    birth_date DATE,
    id_card_number VARCHAR2(18),
    contact_phone VARCHAR2(20),
    address VARCHAR2(200),
    emergency_contact VARCHAR2(200)
);

CREATE TABLE FamilyInfo (
    family_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    name VARCHAR2(100),
    relationship VARCHAR2(50),
    contact_phone VARCHAR2(20),
    contact_email VARCHAR2(50),
    address VARCHAR2(200),
    is_primary_contact CHAR(1) CHECK (is_primary_contact IN ('Y', 'N')),
    CONSTRAINT fk_elderly
        FOREIGN KEY (elderly_id)
        REFERENCES ElderlyInfo(elderly_id)
);

CREATE TABLE HealthMonitoring (
    monitoring_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    monitoring_date DATE,
    heart_rate INT,
    blood_pressure VARCHAR2(20),
    oxygen_level FLOAT,
    temperature FLOAT,
    status VARCHAR2(20),
    CONSTRAINT fk_health_elderly
        FOREIGN KEY (elderly_id)
        REFERENCES ElderlyInfo(elderly_id)
);

CREATE TABLE MedicalOrders (
    order_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    order_date DATE,
    staff_id INT,
    medicine_id INT,
    dosage VARCHAR2(20),
    frequency VARCHAR2(50),
    duration VARCHAR2(50)
    
);

CREATE TABLE NursingPlan (
    plan_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    staff_id INT,
    plan_start_date DATE,
    plan_end_date DATE,
    care_type VARCHAR2(50),
    priority VARCHAR2(50),
    evaluation_status VARCHAR2(50)
   
);

CREATE TABLE FeeSettlement (
    settlement_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    total_amount DECIMAL(10, 2),
    insurance_amount DECIMAL(10, 2),
    personal_payment DECIMAL(10, 2),
    settlement_date DATE,
    payment_status VARCHAR2(20),
    payment_method VARCHAR2(50),
    staff_id INT
   
);

CREATE TABLE HealthAssessmentReport (
    assessment_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    assessment_date DATE,
    Physical_health_function INT,
    Psychological_function INT,
    Cognitive_function INT,
    Health_grade VARCHAR2(50),
    CONSTRAINT fk_assessment_elderly
        FOREIGN KEY (elderly_id)
        REFERENCES ElderlyInfo(elderly_id)
);

CREATE TABLE ActivityParticipation (
    participation_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    activity_id INT NOT NULL,
    elderly_id INT NOT NULL,
    status VARCHAR2(20),
    registration_time TIMESTAMP,
    check_in_time TIMESTAMP,
    feedback CLOB
    
    
);

CREATE TABLE DietRecommendation (
    recommendation_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    recommendation_date DATE,
    recommended_food CLOB,
    execution_status VARCHAR2(20),
    CONSTRAINT fk_diet_elderly
        FOREIGN KEY (elderly_id)
        REFERENCES ElderlyInfo(elderly_id)
);

CREATE TABLE EmergencySOS (
    call_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    elderly_id INT,
    call_time TIMESTAMP,
    call_type VARCHAR2(50),
    room_id INT,
    response_time TIMESTAMP,
    response_staff INT,
    follow_up_required CHAR(1) CHECK (follow_up_required IN ('Y', 'N')),
    call_status VARCHAR2(20),
    handling_result CLOB
    
);

CREATE TABLE OperationLog (
    log_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    staff_id NUMBER NOT NULL,
    operation_time DATE DEFAULT SYSDATE,
    operation_type VARCHAR2(50),
    operation_description CLOB,
    affected_entity VARCHAR2(100),
    operation_status VARCHAR2(20),
    ip_address VARCHAR2(50),
    device_type VARCHAR2(50)

);
