// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using api;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FeeSettlementNursingPlan", b =>
                {
                    b.Property<int>("FeeSettlementssettlement_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("NursingPlansplan_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("FeeSettlementssettlement_id", "NursingPlansplan_id");

                    b.HasIndex("NursingPlansplan_id");

                    b.ToTable("NursingPlanFeeSettlement", (string)null);
                });

            modelBuilder.Entity("api.Models.ActivitySchedule", b =>
                {
                    b.Property<int>("activity_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("activity_id"));

                    b.Property<DateTime>("activity_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("activity_name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("fee")
                        .HasColumnType("NUMBER(18, 2)");

                    b.Property<bool>("is_chargeable")
                        .HasColumnType("BOOLEAN");

                    b.HasKey("activity_id");

                    b.ToTable("ActivitySchedule");
                });

            modelBuilder.Entity("api.Models.ElderlyActivity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("activity_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("elderly_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("activity_id");

                    b.HasIndex("elderly_id");

                    b.ToTable("ElderlyActivity");
                });

            modelBuilder.Entity("api.Models.ElderlyInfo", b =>
                {
                    b.Property<int>("elderly_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("elderly_id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("contact_phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("emergency_contact")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("id_card_number")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("elderly_id");

                    b.ToTable("ElderlyInfo");
                });

            modelBuilder.Entity("api.Models.FeeDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("NUMBER(18,2)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("DATE");

                    b.Property<int>("fee_settlement_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("fee_type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("quantity")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("DATE");

                    b.Property<decimal?>("unit_price")
                        .HasColumnType("NUMBER(18,2)");

                    b.HasKey("id");

                    b.HasIndex("fee_settlement_id");

                    b.ToTable("FeeDetails");
                });

            modelBuilder.Entity("api.Models.FeeSettlement", b =>
                {
                    b.Property<int>("settlement_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("settlement_id"));

                    b.Property<DateTime>("billing_cycle_end")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("billing_cycle_start")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("elderly_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("insurance_amount")
                        .HasColumnType("NUMBER(18, 2)");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("personal_payment")
                        .HasColumnType("NUMBER(18, 2)");

                    b.Property<DateTime>("settlement_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("staff_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("NUMBER(18, 2)");

                    b.HasKey("settlement_id");

                    b.HasIndex("elderly_id");

                    b.HasIndex("staff_id");

                    b.ToTable("FeeSettlement");
                });

            modelBuilder.Entity("api.Models.MedicalOrder", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<int>("elderly_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("medicine_name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("quantity")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("staff_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("NUMBER(18, 2)");

                    b.HasKey("order_id");

                    b.HasIndex("elderly_id");

                    b.HasIndex("staff_id");

                    b.ToTable("MedicalOrder");
                });

            modelBuilder.Entity("api.Models.NursingPlan", b =>
                {
                    b.Property<int>("plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("plan_id"));

                    b.Property<string>("care_type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("elderly_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("evaluation_status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("plan_end_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("plan_start_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("staff_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("plan_id");

                    b.HasIndex("elderly_id");

                    b.HasIndex("staff_id");

                    b.ToTable("NursingPlan");
                });

            modelBuilder.Entity("api.Models.RoomManagement", b =>
                {
                    b.Property<int>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("room_id"));

                    b.Property<DateTime>("check_in_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("check_out_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal>("daily_rate")
                        .HasColumnType("NUMBER(18, 2)");

                    b.Property<int>("elderly_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("room_number")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("room_type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("room_id");

                    b.HasIndex("elderly_id");

                    b.ToTable("RoomManagement");
                });

            modelBuilder.Entity("api.Models.StaffInfo", b =>
                {
                    b.Property<int>("staff_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staff_id"));

                    b.Property<string>("contact_phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("hire_date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("staff_id");

                    b.ToTable("StaffInfo");
                });

            modelBuilder.Entity("FeeSettlementNursingPlan", b =>
                {
                    b.HasOne("api.Models.FeeSettlement", null)
                        .WithMany()
                        .HasForeignKey("FeeSettlementssettlement_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.NursingPlan", null)
                        .WithMany()
                        .HasForeignKey("NursingPlansplan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.ElderlyActivity", b =>
                {
                    b.HasOne("api.Models.ActivitySchedule", "ActivitySchedule")
                        .WithMany("ElderlyActivities")
                        .HasForeignKey("activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ElderlyInfo", "ElderlyInfo")
                        .WithMany("ElderlyActivities")
                        .HasForeignKey("elderly_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivitySchedule");

                    b.Navigation("ElderlyInfo");
                });

            modelBuilder.Entity("api.Models.FeeDetail", b =>
                {
                    b.HasOne("api.Models.FeeSettlement", "FeeSettlement")
                        .WithMany("FeeDetails")
                        .HasForeignKey("fee_settlement_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeSettlement");
                });

            modelBuilder.Entity("api.Models.FeeSettlement", b =>
                {
                    b.HasOne("api.Models.ElderlyInfo", "ElderlyInfo")
                        .WithMany()
                        .HasForeignKey("elderly_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.StaffInfo", "StaffInfo")
                        .WithMany()
                        .HasForeignKey("staff_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElderlyInfo");

                    b.Navigation("StaffInfo");
                });

            modelBuilder.Entity("api.Models.MedicalOrder", b =>
                {
                    b.HasOne("api.Models.ElderlyInfo", "ElderlyInfo")
                        .WithMany()
                        .HasForeignKey("elderly_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.StaffInfo", "StaffInfo")
                        .WithMany()
                        .HasForeignKey("staff_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElderlyInfo");

                    b.Navigation("StaffInfo");
                });

            modelBuilder.Entity("api.Models.NursingPlan", b =>
                {
                    b.HasOne("api.Models.ElderlyInfo", "ElderlyInfo")
                        .WithMany()
                        .HasForeignKey("elderly_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.StaffInfo", "StaffInfo")
                        .WithMany()
                        .HasForeignKey("staff_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElderlyInfo");

                    b.Navigation("StaffInfo");
                });

            modelBuilder.Entity("api.Models.RoomManagement", b =>
                {
                    b.HasOne("api.Models.ElderlyInfo", "ElderlyInfo")
                        .WithMany()
                        .HasForeignKey("elderly_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElderlyInfo");
                });

            modelBuilder.Entity("api.Models.ActivitySchedule", b =>
                {
                    b.Navigation("ElderlyActivities");
                });

            modelBuilder.Entity("api.Models.ElderlyInfo", b =>
                {
                    b.Navigation("ElderlyActivities");
                });

            modelBuilder.Entity("api.Models.FeeSettlement", b =>
                {
                    b.Navigation("FeeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
